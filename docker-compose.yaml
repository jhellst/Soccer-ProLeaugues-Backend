version: "3.9"

services:
  flask_app:
    container_name: flask_app
    build: ./soccer-proleagues-backend
    image: joshhellstrom/flask_live_app:1.0.0
    command: flask run --host=0.0.0.0 --port=4000
    ports:
      - "4000:4000"
    environment:
      # DB_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@$postgres_db:5432/${POSTGRES_DB}
      DB_URL: ${DATABASE_URI}
      SQLALCHEMY_DATABASE_URI: ${DATABASE_URI}
    volumes:
      - ./soccer-proleagues-backend:/app/soccer-proleagues-backend  # Local development
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      retries: 3

  db:
    container_name: soccer-proleagues-db
    image: postgres:latest
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./docker-entrypoint-initdb.d/init-seed.sh:/docker-entrypoint-initdb.d/init-seed.sh  # Custom seed script
    ports:
      - "5432:5432"
    restart: always
    # healthcheck:
    #   test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
    #   interval: 10s
    #   retries: 5

  react_frontend:
    container_name: react_frontend
    build: ./soccer-proleagues-frontend
    volumes:
      - ./soccer-proleagues-frontend:/app
    ports:
      - "5001:3000"
    environment:
      - NODE_ENV=development
      - REACT_APP_BACKEND_SERVICE_URL=http://flask_app:4000  # Flask service URL (Docker network resolution)
    depends_on:
      - flask_app

volumes:
  pgdata: {}
